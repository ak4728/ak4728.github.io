function loadTRX(trx_id) {
	$.getJSON({
		type: "GET",		
     		url: apiserver +'trxinfo?trx='+trx_id,		
     		async: false,		
     		success: function(data){
                transactions = data.transactions;
		console.log(transactions);
            }		
 	    });
        
        //console.log(players);
        return transactions ? transactions : false;
};

function loadTRX_transfer(trx_id) {
	$.getJSON({
		type: "GET",		
     		url: apiserver +'trxinfo_transfer?trx='+trx_id,		
     		async: false,		
     		success: function(data){
                transactions = data.transactions;
		console.log(transactions);
            }		
 	    });
        
        //console.log(players);
        return transactions ? transactions : false;
};



function closeModal(){
	document.getElementById('myModal').style.display = "none"
};

async function sendJson(jsonMessage){
	console.log("click");
	return new Promise(resolve => {
		hive_keychain.requestCustomJson(userName, serverKeyword, "Posting",jsonMessage, 
						  "Broadcasting a Custom JSON", r => {
			    resolve({
				    success: r.success,
				    trx_id: r.success ? r.result.id : null,
				    error: r.success ? null : ((typeof r.error == 'string') ? r.error : JSON.stringify(r.error))
			    });
		    });
	    });
    };
	
	
function Sleep(milliseconds) {
	return new Promise(resolve => setTimeout(resolve, milliseconds));
};
	
function playersByTRX(trx_id) {
	value = null;
	$.getJSON({
		type: "GET",		
     		url: apiserver +'team?trx='+trx_id,		
     		async: false,		
     		success: function(data){
                players = data.players;
            }		
 	    });
        
        //console.log(players);
        return players ? players : false;
};

function signablePlayersByTRX(trx_id) {
	value = null;
	$.getJSON({
		type: "GET",		
     		url: apiserver +'signable_player?trx='+trx_id,		
     		async: false,		
     		success: function(data){
                players = data.players;
            }		
 	    });
        
        //console.log(players);
        return players ? players : false;
};

function userExists(usrName) {
	value = null;
	$.getJSON({
		type: "GET",
		url: apiserver +'userinfo?user='+usrName,		
     		async: false,		
     		success: function(data){
			usr = data.user;
		}
	});
        console.log(usr);
        return usr ? usr : false;
};

async function transferHiveorHBD(fromUser, toUser,amount,memo,currency){
	return new Promise(resolve => {
		window.hive_keychain.requestTransfer(fromUser, toUser, amount, memo,currency, 
						  r => {
			    resolve({
				    success: r.success,
				    trx_id: r.success ? r.result.id : null,
				    error: r.success ? null : ((typeof r.error == 'string') ? r.error : JSON.stringify(r.error))
			    });
		    });
	    });
    };

function convertTimestamp(timestamp) {
  var d = new Date(timestamp * 1000),	// Convert the passed timestamp to milliseconds
		yyyy = d.getFullYear(),
		mm = ('0' + (d.getMonth() + 1)).slice(-2),	// Months are zero based. Add leading 0.
		dd = ('0' + d.getDate()).slice(-2),			// Add leading 0.
		hh = d.getHours(),
		h = hh,
		min = ('0' + d.getMinutes()).slice(-2),		// Add leading 0.
		ampm = 'AM',
		time;
			
	if (hh > 12) {
		h = hh - 12;
		ampm = 'PM';
	} else if (hh === 12) {
		h = 12;
		ampm = 'PM';
	} else if (hh == 0) {
		h = 12;
	}
	
	// ie: 2013-02-18, 8:35 AM	
	time = yyyy + '-' + mm + '-' + dd + ', ' + h + ':' + min + ' ' + ampm;
		
	return time;
}
function formatNumber(num) {
    num = parseInt(num)
    return num.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')
}
